
# Search patterns for finding packages
SET (
    PACKAGE_SEARCH_PATHS 
    ~/Library/Frameworks
    /Library/Frameworks
    /usr/local
    /opt/local
    /opt/csw 
    /usr
    /opt
    /sw 
)


# For managing runtime logging
FIND_PACKAGE (spdlog 1.11.0 REQUIRED HINTS PACKAGE_SEARCH_PATHS)



# Include packages (the included header files)
TARGET_INCLUDE_DIRECTORIES (
    ${PROJECT_NAME} 
    PRIVATE 
    ${SDL2_INCLUDE_DIR} 
    ${SDL2_IMAGE_INCLUDE_DIR} 
    ${SDL2_TTF_INCLUDE_DIR} 
    ${SDL2_MIXER_INCLUDE_DIR} 
    ${SPDLOG_INCLUDE_DIR} 
    ${PROJECT_LIB_DIR}
)

# Library packages (the library definitions)
TARGET_LINK_LIBRARIES (
    ${PROJECT_NAME} 
    PRIVATE 
    SDL2::SDL2 
    SDL2_image::SDL2_image 
    SDL2_ttf::SDL2_ttf 
    SDL2_mixer::SDL2_mixer
    spdlog::spdlog
)

# =============================================================================

# Compiler setup
SET (GCC_COMPILER_CXX "$<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC>")
SET (MSVC_COMPILER_CXX "$<COMPILE_LANG_AND_ID:CXX,MSVC>")

# See https://caiorss.github.io/C-Cpp-Notes/compiler-flags-options.html
SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wshadow -Wpedantic")
SET (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
SET (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
TARGET_COMPILE_OPTIONS (${PROJECT_NAME} INTERFACE
    "$<${GCC_COMPILER_CXX}:$<BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wpedantic;-Wformat=2;-Wunused>>"
    "$<${MSVC_COMPILER_CXX}:$<BUILD_INTERFACE:-W3>>"
)

